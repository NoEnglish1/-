#include<iostream>
#include<vector>
using namespace std;

/*
	减少vector在动态扩展时的 扩展次数

	reserve(int len); 容器预留len个元素长度，预留位置不初始化，元素不可访问

*/
void test1()
{
	vector<int>v;
	int num = 0;
	int* p = NULL;
  //把每次扩展的大小改成10000
	v.reserve(10000);
	for (int i = 0; i < 100000; i++)
	{
		v.push_back(i);
    //因为每次扩展都会重新找一块空间,所以每次指向v[0] 就代表扩展了一次
		if (p!=&v[0])
		{
			p = &v[0];
			num++;
		}
	}
	cout << num <<' ' << v.capacity();
}
int main()
{
	test1();
	return 0;
}
